{"version":3,"sources":["axios.js","Components/Row.js","requests.js","Components/Banner.js","Components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchURL","isLargeRow","useState","movies","setMovies","respo","setRespo","useEffect","a","get","request","data","results","fetchData","opts","height","width","playerVars","autoplay","handleClick","e","videoFetch","fetch","target","id","vidfetch","json","vidresp","console","log","className","map","movie","onClick","src","poster_path","backdrop_path","alt","name","video","type","slice","videoId","key","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","tittle","original_name","overview","substr","Nav","navShow","setNavShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4fd72bcc.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"../axios\";\r\nimport \"./Row.css\";\r\nimport YouTube from \"react-youtube\";\r\n// import movieTrailer from \"movie-trailer\";\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original\";\r\n\r\nfunction Row({ title, fetchURL, isLargeRow }) {\r\n  const [movies, setMovies] = useState([]);\r\n  // const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n  const [respo, setRespo] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchURL);\r\n      setMovies(request.data.results);\r\n      // console.log(request);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [fetchURL]);\r\n  // console.log(movies);\r\n  const opts = {\r\n    height: \"300\",\r\n    width: \"400\",\r\n    playerVars: {\r\n      // https://developers.google.com/youtube/player_parameters\r\n      autoplay: 0,\r\n    },\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    const videoFetch = async () => {\r\n      const vidfetch = await fetch(\r\n        `https://api.themoviedb.org/3/movie/${e.target.id}/videos?api_key=05a5023ec53396dbac2b66d35a1c01aa&language=en-US`\r\n      );\r\n      const vidresp = await vidfetch.json();\r\n\r\n      setRespo(vidresp.results);\r\n    };\r\n    videoFetch();\r\n    console.log(e.target.id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n      <div className=\"row__posters\">\r\n        {movies.map((movie) => (\r\n          <img\r\n            key={movie.id}\r\n            id={movie.id}\r\n            onClick={handleClick}\r\n            className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n            src={`${base_url}${\r\n              isLargeRow ? movie.poster_path : movie.backdrop_path\r\n            }`}\r\n            alt={movie.name}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div className=\"video-box\">\r\n        {respo.map((video) => {\r\n          console.log(respo);\r\n          return (\r\n            <div>\r\n              {video.type === \"Trailer\" && (\r\n                <div className=\"youtubeVideo\">\r\n                  <h1>{video.name.slice(0, 30)}...</h1>\r\n                  <YouTube videoId={video.key} opts={opts}></YouTube>\r\n                </div>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","const API_KEY = \"05a5023ec53396dbac2b66d35a1c01aa\";\r\n\r\nconst requests = {\r\n  fetchTrending: `trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\nexport default requests;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport requests from \"../requests\";\r\nimport axios from \"../axios\";\r\nimport \"./Banner.css\";\r\n\r\nfunction Banner() {\r\n  const [movie, setMovie] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchNetflixOriginals);\r\n      setMovie(\r\n        request.data.results[\r\n          Math.floor(Math.random() * request.data.results.length)\r\n        ]\r\n      );\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  // console.log(movie);\r\n\r\n  function truncate(str, n) {\r\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n  }\r\n\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url(https://image.tmdb.org/t/p/original/${movie?.backdrop_path})`,\r\n        backgroundPosition: \"center__center\",\r\n      }}\r\n    >\r\n      <div className=\"banner__contents\">\r\n        <h1 className=\"banner__title\">\r\n          {movie?.tittle || movie?.name || movie?.original_name}\r\n        </h1>\r\n\r\n        <div className=\"banner__buttons\">\r\n          <button className=\"banner__button\">Play</button>\r\n          <button className=\"banner__button\">My List</button>\r\n        </div>\r\n        <h1 className=\"banner__description\">\r\n          {movie?.overview} {truncate(movie?.overview, 150)}\r\n        </h1>\r\n      </div>\r\n      <div className=\"banner--fadebottom\"></div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Nav.css\";\r\n\r\nfunction Nav() {\r\n  const [navShow, setNavShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY > 100) {\r\n        setNavShow(true);\r\n      } else {\r\n        setNavShow(false);\r\n      }\r\n    });\r\n    return () => {\r\n      window.removeEventListener(\"scroll\");\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className={`nav ${navShow && \"show__navbar\"}`}>\r\n      <img\r\n        className=\"netflix__logo\"\r\n        src=\"https://image.tmdb.org/t/p/original/wwemzKWzjKYJFfCeiB57q3r4Bcm.svg\"\r\n        alt=\"Netflix Logo\"\r\n      />\r\n\r\n      <img\r\n        className=\"avatar__logo\"\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\r\n        alt=\"Avatar\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import \"./App.css\";\r\nimport React from \"react\";\r\nimport Row from \"./Components/Row\";\r\nimport requests from \"./requests\";\r\nimport Banner from \"./Components/Banner\";\r\nimport Nav from \"./Components/Nav\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Nav></Nav>\r\n      <Banner></Banner>\r\n      <Row\r\n        title=\"NETFLIX ORIGINAL\"\r\n        fetchURL={requests.fetchNetflixOriginals}\r\n        isLargeRow={true}\r\n      ></Row>\r\n      <Row title=\"Trending Now\" fetchURL={requests.fetchTrending}></Row>\r\n      <Row title=\"Top Rated\" fetchURL={requests.fetchTopRated}></Row>\r\n      <Row title=\"Action Movies\" fetchURL={requests.fetchActionMovies}></Row>\r\n      <Row title=\"Comedy Movied\" fetchURL={requests.fetchComedyMovies}></Row>\r\n      <Row title=\"Horror Movies\" fetchURL={requests.fetchHorrorMovies}></Row>\r\n      <Row title=\"Romance Movies\" fetchURL={requests.fetchRomanceMovies}></Row>\r\n      <Row title=\"Documentaries\" fetchURL={requests.fetchDocumentaries}></Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}